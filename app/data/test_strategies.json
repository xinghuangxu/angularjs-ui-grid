[{"StrategyID":"3","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-04-01T13:46:40-5N","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-05-01 13:46:41.060","ModifiedBy":"sunny1","ModifiedDate":"2013-08-09 15:02:30.037","StrategyHeadline":"Test-mohamman-test strategy","TestStrategy":"Void void void sd","Owner":"sunny1","Approach":"Functional","Goal":"test","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-04-01T13:46:40-5N","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"CFW","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"3","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200074032","ReqxScopePhase":"Initial","ReqxTitle":"New OEM adapter to support Thunderbolt Lite FW functionality and speed","Boxcar":"LSIP200038940"},{"RequirementType":"Defect","StrategyID":"3","Priority":"          ","ScopeSize":"1","RiskMultiplier":"1.1","Complexity":"","Leverage":null,"RITSize":null,"ScopePhase":"Defect","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"}],"references":[],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"3","CategoryID":"6"}},{"CategoryID":"24","CategoryName":"CFW","CategoryPath":"Root\\Feature","CategoryFatherID":"17","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":"1","Feature":null,"Software":"1","Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"3","CategoryID":"24"}}]},{"StrategyID":"4","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-04-02T13:25:37-WNNAH5MI","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-05-02 13:25:38.270","ModifiedBy":"sunny1","ModifiedDate":"2013-08-09 15:01:17.837","StrategyHeadline":"Test-claytons-test-strategy","TestStrategy":"Test","Owner":"sunny1","Approach":"Unit test","Goal":" ","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-04-02T13:25:37-WNNAH5MI","RevisionOf":null,"Type":"G","QualArea":"Performance","ImpactArea":"SDK","suggestedTestCases":[],"requirements":[],"references":[],"categories":[{"CategoryID":"14","CategoryName":"Performance","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"4","CategoryID":"14"}},{"CategoryID":"221","CategoryName":"SDK","CategoryPath":"Root\\Feature","CategoryFatherID":"17","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":"1","Feature":null,"Software":"1","Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"4","CategoryID":"221"}}]},{"StrategyID":"8","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-04-06T13:24:02-04CMCXR","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-05-06 13:24:03.087","ModifiedBy":"dstein","ModifiedDate":"2013-11-08 14:55:13.570","StrategyHeadline":"XCOPY Lite Copy Between Sector Type","TestStrategy":"- Verify ability to copy data using ODX between different combinations of supported drive sectors\n","Owner":"dstein","Approach":"Functional","Goal":"Validate that ODX can copy between different drive sector types","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-04-06T13:24:02-04CMCXR","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"8","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"8","Priority":"          ","ScopeSize":"1.6","RiskMultiplier":"1.2","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"CQ","StrategyID":"8","ReqType":"CQ","dbID":"LSIP200225299","ID":"","Title":"","DocNumber":"","DocTitle":"","DocRevision":""}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"8","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"8","CategoryID":"26"}}]},{"StrategyID":"27","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-05T16:34:48-K8R","TopicRev":"0","TopicRevComments":null,"State":"Defined","CreatedBy":null,"CreatedDate":"2013-06-05 16:34:42.600","ModifiedBy":null,"ModifiedDate":"2013-06-05 16:34:42.600","StrategyHeadline":"Mohammad-void3","TestStrategy":"","Owner":null,"Approach":"Functional","Goal":null,"IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-05T16:34:48-K8R","RevisionOf":null,"Type":"G","QualArea":"Serviceability","ImpactArea":"Microsoft","suggestedTestCases":[],"requirements":[],"references":[],"categories":[{"CategoryID":"10","CategoryName":"Serviceability","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"27","CategoryID":"10"}},{"CategoryID":"209","CategoryName":"Microsoft","CategoryPath":"Root\\Feature\\Plug-in","CategoryFatherID":"208","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"27","CategoryID":"209"}}]},{"StrategyID":"28","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-05T17:09:40-ME","TopicRev":"0","TopicRevComments":null,"State":"Assigned","CreatedBy":null,"CreatedDate":"2013-06-05 17:09:41.213","ModifiedBy":"dstein","ModifiedDate":"2013-11-25 13:04:35.297","StrategyHeadline":"XCOPY 4","TestStrategy":"* Test","Owner":"dstein","Approach":"Functional","Goal":" ","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-05T17:09:40-ME","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[],"references":[],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"28","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"28","CategoryID":"26"}}]},{"StrategyID":"29","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-05T17:11:31-TF2K2O6R","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-05 17:11:31.727","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:27:25.697","StrategyHeadline":"XCOPY Lite SCSI Supported CDBs","TestStrategy":"1. The storage arrays will implement the POPULATE_TOKEN (PT), WRITE_USING_TOKEN (WUT) and RECEIVE_ROD_TOKEN_INFORMATION(RRTI) commands as mandated by SPC-4 rev 36e and XCOPY LITE proposal T10 T10\/11-059 r8. \n- Test focus will be on exercising the new SCSI commands implemented for the ODX feature:\n   - POPULATE_TOKEN\n   - WRITE_USING_TOKEN\n   - RECEIVE_ROD_TOKEN_INFORMATION\n- Individually verify the functionality and the error handling of these new SCSI commands via a tool like TAS which can manipulate the bytes of the SCSI CDB.\n2. PIT Concept: When a POPULATE TOKEN (PT) command is received by the controller firmware, a Point-in-Time representation of the data ranges described in the PT command will be created. A TOKEN object will represent that PIT and will be returned to the host.\n- Validate POPULATE_TOKEN command is received by the controller firmware\n- According to T10 11-059r8 spec, Windows adopts (1) OP Code = 83h with Service Action Code=10h for POPULATE TOKEN command\n3. Copy PIT: The Point-in-Time representation of the data will be copied to the destination when a subsequent WRITE_USING_TOKEN (WUT) command is received for that TOKEN. The data copied would be the data in existence at the time the corresponding PT was received.\n- Validate WRITE_USING_TOKEN command is recieved by the controller firmware\n- Validate Point-in-Time copy was performed\n- Validate Point-in-Time copy was error-free and not corrupted\n- Validate Point-in-Time copy was performed within the array with no host involvement\n - According to T10 11-059r8 spec, Windows adopts OP Code=83h   Service Action Code = 11 for WRITE USING TOKEN command\n4. Status: Token status can be retrieved using RECEIVE_ROD_TOKEN_INFORMATION (RRTI).\n- Validate that RRTI provides token status","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-05T17:11:31-TF2K2O6R","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"29","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"29","Priority":"          ","ScopeSize":"0.2","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"ER","StrategyID":"29","ReqType":"ER","dbID":"4796","ID":"2013-04-16T23:13:00Z-26895-IDAJDIWI","Title":"Windows Requirements on ODX Capable Storage Array","DocNumber":"263-00942","DocTitle":"Support for Windows ODX","DocRevision":"A.6"}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"29","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"29","CategoryID":"26"}}]},{"StrategyID":"30","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:11:34-CG","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-12 14:11:35.540","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:29:14.567","StrategyHeadline":"XCOPY Lite and Host Writes","TestStrategy":"1. In general, MSFT does not expect a write operation to occur between a PT and a subsequent WUT for source LBA ranges associated with a TOKEN. If a host write does occur, the TOKEN will be invalidated by the array. See section Section 2.1.2. Windows Design Assumptions.\n- Validate that a host write operation to a source in an associated LBA range with a open ODX operation (PT or WUT) will invalidate the token.\n2. The array will track writes within the source LBA ranges on active TOKENS to detect this case.\n- Informational only (see #1  for the test scenario)\n3. Subsequent host-issued WUT operations utilizing an invalid TOKEN will fail.\n- Informational only (see #1  for the test scenario)\n4. Inflight WUT operations that have not completed and which utilize a recently invalid TOKEN may fail.\n- Informational only (see #1  for the test scenario)...this may get into a timing scenario of whether or not the inflight WUT operations will fail.\n5. Host writes to destination LBA ranges associated with a WUT are will not invalidate the TOKEN.\n- Validate that a host write to a destination LBA range associated with an outstanding WUT to the LBA within the host write s destination LBA range will not invalidate the token.\n6. Data integrity on the destination volume is not the storage arrays responsibility or even within its capability. Higher level software (e.g. Windows 8) will be responsible for ensuring file locking on the destination data LBA ranges.\n- Informational only (data written during a complete ODX operation can be validated under other test scenarios).\n 7. TBP: How a RRTI will detect an invalid TOKEN?\n- TBD (I believe we will need some definition on this to understand possible test scenarios)","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:11:34-CG","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"30","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"30","Priority":"          ","ScopeSize":"0.2","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"ER","StrategyID":"30","ReqType":"ER","dbID":"4806","ID":"2013-04-22T16:48:00Z-32424-IDAE11LE","Title":"TOKEN Region Validity Invalidated by Host Writes","DocNumber":"263-00942","DocTitle":"Support for Windows ODX","DocRevision":"A.6"}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"30","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"30","CategoryID":"26"}}]},{"StrategyID":"31","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:24:41-ONB","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-12 14:24:42.000","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:30:08.250","StrategyHeadline":"XCOPY Lite and Token Behavior","TestStrategy":"1. TOKEN Reuse - A single TOKEN can be reused for multiple WUT operations.\n- Validate that a single token can be reused for multiple WUT operations.\n2. TOKEN Timeout - The TOKENs timeout will be specified by the storage array and will default to 60 seconds. The Maximum permissible settable value will be 120 seconds.\n- Validate the token timeout setting for the storage array.\n3. TOKEN Status - Status of TOKENS e.g. (expired, created, in-progress) will be available via console but not via Santricity. See Section Section 8.1. XCOPY Lite Serviceability for more information.\n- Validate that TOKEN status can be obtained via the console (expired, created, in-progress)\n- Validate that TOKEN internal data can be obtained via the console\n- Validate that TOKEN counts can be obtained via the console\n4. TOKEN Duration - The TOKEN will need to be maintained by the array till the TOKEN is timed out through the INACTIVITY TIMEOUT period.\n- Validate that the token is maintained until it times out following the inactivity period.\n5. TOKEN Refresh - When a subsequent WRITE_USING_TOKEN is received prior to the INACTIVITY_TIMEOUT duration, the TOKEN timer is restarted.\n- Validate that the token timer is restarted when a subsequent WUT is received.\n6. TOKEN Expiration - If a WRITE_USING_TOKEN is received subsequent to the INACTIVITY_TIMEOUT duration expiration, the WRITE_USING_TOKEN will fail.\n- Validate that a WUT issued following the inactivity timeout period will fail.\n7. Max Range Descriptors - The maximum number of range descriptors in a TOKEN for XCOPY LITE will be 8.\n- TBD...Validate that the maximum number of range descriptors in a token will be 8. (Need a description what range descriptors are.  Is there a way that they can be exceeded (does this need to be tested)?).\n8. Inactivity_Timer Default - The POPULATE_TOKEN command CDB will provide an INACTIVITY_TIMEOUT value. A value of 0 (zero) specifies that the array can use its own default timeout value. A value less than the default value shall be accepted.\n- TBD (Will only a value of zero be used for this release?  If not, how might a different value get set?).\n9. Controller Reboot Invalidates TOKENS - Tokens and token processing will not survive a controller reboot; in the event of a controller reboot, all currently valid Tokens are invalidated.\n- Validate that during a controller reboot (can also test controller pull\/replace and array power cycle) that all outstanding tokens become invalidated.\n10. Volume Transfer Invalidates Tokens - Tokens and token processing will not survive a volume ownership transfer of volumes involved in the ODX processing. In the event of a volume ownership transfer, all currently valid Tokens are invalidated.\n- Validate that during a volume transfer that all outstanding tokens become invalidated.","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:24:41-ONB","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"31","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"31","Priority":"          ","ScopeSize":"1.2","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"ER","StrategyID":"31","ReqType":"ER","dbID":"4792","ID":"2013-04-16T23:13:00Z-26895-IDA43IWI","Title":"Token Behavior","DocNumber":"263-00942","DocTitle":"Support for Windows ODX","DocRevision":"A.6"}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"31","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"31","CategoryID":"26"}}]},{"StrategyID":"32","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:26:48-X9Q","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-12 14:26:49.270","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:31:00.960","StrategyHeadline":"XCOPY Lite and Standard Inquiry","TestStrategy":"1. The Inquiry command shall set the EVPD bit to \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"1\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" and the Page Code to 8fh.\n - Validate Standard Inquiry is supported and that the feature is shown to be enabled.\n2. Section 4.30.1 of SBC3 \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" Block device ROD token operations overview\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" specifies that copy managers that implement POPULATE TOKEN, WRITE-USING-TOKEN must implement the Third-party COPY VPD page described in [SBC3] Section 6.6.6.3.\n- TBD (I believe this is informational only and that this does not need to be tested.  Need to confirm with scrum team).\n3. The COPY VPD page must contain at least one Block Device ROD Token Limits descriptor (see [SBC3]6.6.6.3).\n- TBD (Is this covered by validating Standard Inquiry?)\n1. Standard Inquiry for XCopy Lite will be supported as per SPC-4 rev 36e and XCOPY LITE proposal T10 T10\/11-059 r8.\n - Covered under Topic ID: 2013-04-18T20:58:00Z-29722-IDAAVMPE","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:26:48-X9Q","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"32","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"32","Priority":"          ","ScopeSize":"0.1","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"ER","StrategyID":"32","ReqType":"ER","dbID":"4802","ID":"2013-04-18T20:58:00Z-29722-IDAAVMPE","Title":"Standard Inquiry: Third-party COPY VPD page","DocNumber":"263-00942","DocTitle":"Support for Windows ODX","DocRevision":"A.6"}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"32","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"32","CategoryID":"26"}}]},{"StrategyID":"33","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:31:44-6AX","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-12 14:31:44.900","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:31:30.060","StrategyHeadline":"XCOPY Lite and Populate Token","TestStrategy":"1. PT Spec : POPULATE TOKEN is described in detail in \\\\\\\\\\\\\\\"Information technology -SCSI Block Commands %u2013 3 (SBC-3)\\\\\\\\\\\\\\\" Revision 3507 December 2012, Section 5.7 \\\\\\\\\\\\\\\" Populate Token\\\\\\\\\\\\\\\". The array must implement the spec unless exceptions are noted below.\n-  Informational only.\n2. In general, the POPULATE TOKEN commands requests that the copy manager:\na. Create a point in time data representation from the specified LBAs:\nb. Create a ROD token; and\nc. Associate the ROD token with the point in time data representation.\n- Informational only (this can be validated through the testing of XCOPY Lite functionality).\n3. Support of IMMED bit.\na. The first release of POPULATE_TOKEN will only support on IMMED bit of 1\nb. If a value other than 1 in encountered in the IMMED bit, the copy server shall terminate the command with CHECK CONDITION status with the sense key set to ILLEGAL REQUEST and the additional sense code set to INVALID FIELD IN PARAMETER LIST.\n- Validate that if the IMMED bit is set to a value other than 1  that the command is terminated and a check condition status is returned.\nc. Note, as per the SBC 3 spec, the purpose of the IMMED bit is: An immediate (IMMED) bit set to zero specifies that the copy manager shall return status after the specified operations have completed. An IMMED bit set to one specifies that the copy manager shall return status after the entire parameter list has been transferred.\n- Testing with the IMMED bit correctly set is covered as part of the overall feature; testing with the IMMED bit incorrecty set is covered by 3b.\n4. Support of INACTIVITY TIMEOUT\na. The first release of POPULATE_TOKEN will only support on INACTIVITY TIMEOUT specified by the storage array e.g the DEFAULT INACTIVITY TIMEOUT.\n- Informational only.\nb. If a value other than zero in encountered in the INACTIVITY TIMEOUT field, the copy server shall terminate the command with CHECK CONDITION status with the sense key set to ILLEGAL REQUEST and the additional sense code set to INVALID FIELD IN PARAMETER LIST.\n- Validate that if a value other than 0 is set in the INACTIVITY TIMEOUT field that the command is terminated and a check condition status is returned.\nc. Note, as per the SBC 3 specification...(excluding large amount of ER text)...\n- For this release, token timeout due to the inactivity timeout setting is validated under Topic ID: 2013-04-16T23:13:00Z-26895-IDA43IWI\n5. Support of ROD TYPE\na. The first release of POPULATE_TOKEN will only support a ROD TYPE specified by the controller array. This implies that a ROD TYPE of 0 is supported and a ROD TYPE of 1 is not initially supported.\n- Test covered under 5b.\nb. If a value other than zero in encountered in the ROD TYPE field, the copy server shall terminate the command with CHECK CONDITION status with the sense key set to ILLEGAL REQUEST and the additional sense code set to INVALID FIELD IN PARAMETER LIST.\n- Validate that if the ROD TYPE  is set to a value other than 0 (for example: 1)  that the command is terminated and a check condition status is returned.\nc. Note, as per the SBC 3 specification...(excluding large amount ER text)...\n- Testing with the ROD TYPE correctly set is covered as part of the overall feature; testing with the ROD TYPE incorrecty set is covered by 5b.\n6. MAX Copy Size: The maximum size of the LBA ranges in a PT command is capped by the maximum Token Transfer size as specified in the Standard Inquiry for the volume. The maximum Token Transfer Size refers to the number of blocks allowed.\na. For a volume that supports 512K blocks, the maximum value will be will be 00000000 00004000h. ( 2**19 512 byte LBAs = 2**28 bytes = 256 Megabytes).\n- Validate that the maximun block transfer size is supported for volumes that support 512K blocks.\nb. For a volume that supports 4K blocks, the maximum value will be 00000000 000000800h. (2**16 4096 byte LBAs = 2**28 bytes = 256 Megabytes)\n- Validate that the maximun block transfer size is supported for volumes that support 4K blocks.\nc. Note that there can be up to 8 LBA ranges in a PT command. The sum of these ranges should not exceed 2**19 for a volume composed of 512 byte block sizes and 2**16 for a volume composed of 4096 byte block sizes.\n- Informational only (can be validated by 6a and 6b).\n7. PT LBA Overlap: Different active TOKENS may overlap LBA ranges.\na. The storage array will not check for this case and must support this case.\n- Validate that different PT commands with overlapping LBA ranges are not invalidated.\nb. Host writes to an LBA range may invalidate one or more TOKENS.\n- Validated the expected behavior of overlapping LBA range host writes.","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:31:44-6AX","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"33","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"33","Priority":"          ","ScopeSize":"0.4","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"ER","StrategyID":"33","ReqType":"ER","dbID":"4805","ID":"2013-04-18T20:58:00Z-29722-IDAVYMPE","Title":"Populate Token (PT)","DocNumber":"263-00942","DocTitle":"Support for Windows ODX","DocRevision":"A.6"}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"33","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"33","CategoryID":"26"}}]},{"StrategyID":"34","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:33:25-GF7","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-12 14:33:26.003","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:32:04.667","StrategyHeadline":"XCOPY Lite and Write Using Token","TestStrategy":"1. WUT Spec : Write_Using_Token is described in detail in \\\\\\\"Information technology -SCSI Block Commands %u2013 3 (SBC-3)\\\\\\\" Revision 3507 December 2012, Section TBP \\\\\\\" Write_Using_Token\\\\\\\". The array must implement the spec unless exceptions are noted below.\n- Informational only.\n2. Same Array: The ODX source and destination LBAs in a WUT must be in the same array. ODX operations between storage arrays are for a future release.\n- Test configurations will be setup to test XCOPY Lite operations within the same array for this release.\n- Validate that XCOPY Lite operations between source and destination volumes on different arrays will fail.\n3. WUT LBA Overlap: WUT operations, including those from the same or different TOKENS, may overlap LBA ranges on the destination LBAs. The storage array will not check for this case.\n- Covered under Topic ID: 2013-04-18T20:58:00Z-29722-IDAVYMPE\n4. RAID Levels: The source and destination volumes may be of differing RAID levels in a WUT command.\n- Covered under Topic ID: 2013-04-16T23:13:00Z-26895-IDAMQJWI\n5. READ\/Write: The same read\/write rules apply to destination volumes for a WUT as for a host writ, e.g. a WUT will fail if the destination volume is read-only.\n- Validate that a WUT will fail if a destination volume is set to read-only.","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T14:33:25-GF7","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"34","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"34","Priority":"          ","ScopeSize":"0.1","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"ER","StrategyID":"34","ReqType":"ER","dbID":"4803","ID":"2013-04-18T20:58:00Z-29722-IDACDNPE","Title":"Write Using Token ( WUT )","DocNumber":"263-00942","DocTitle":"Support for Windows ODX","DocRevision":"A.6"}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"34","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"34","CategoryID":"26"}}]},{"StrategyID":"35","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T15:45:19-LX","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-12 15:45:19.600","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:32:37.763","StrategyHeadline":"XCOPY Lite and Retrieve Rod Token Information","TestStrategy":"1. RRTI Spec : Retrieve Rod Token is described in detail in \\\\\\\\\\\\\\\"Information technology -SCSI Block Commands %u2013 3 (SBC-3)\\\\\\\\\\\\\\\" Revision 3507 December 2012, Section TBP \\\\\\\\\\\\\\\"Retrieve Rod Token \\\\\\\\\\\\\\\". The array must implement the spec unless exceptions are noted below.\n- Informational only, testing of RRTI is covered by Topic ID: 2013-04-22T16:48:00Z-32424-IDARW1LE","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T15:45:19-LX","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"35","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"35","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"ER","StrategyID":"35","ReqType":"ER","dbID":"4804","ID":"2013-04-18T20:58:00Z-29722-IDAQDNPE","Title":"Receive Rod Token Information ( RRTI )","DocNumber":"263-00942","DocTitle":"Support for Windows ODX","DocRevision":"A.6"}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"35","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"35","CategoryID":"26"}}]},{"StrategyID":"36","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T15:46:36-1M","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-12 15:46:36.613","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:33:11.790","StrategyHeadline":"XCOPY Lite and Zero Token Operations","TestStrategy":"1. Zero Toke Spec : Zero Token Operation is described in detail in \\\\\\\\\\\\\\\"Information technology -SCSI Block Commands %u2013 3 (SBC-3)\\\\\\\\\\\\\\\" Revision 3507 December 2012, Section TBP \\\\\\\\\\\\\\\"Zero Token Operation \\\\\\\\\\\\\\\". The array must implement the spec unless exceptions are noted below.\n- Informational only.\n2. Zero Tokens: must be supported ( zeros out LBA ranges on Destination volume ). See ( Provide spec reference ).\n- Validate that a Zero Token operation can be performed on a destination volume and that the LBA range is correctly zeroed out.\n3. Zero Token operations to a PIT View as per section Section 2.3.13. XCOPY Lite Interaction with PITs item \\\\\\\\\\\\\\\"PIT View Zero Token\\\\\\\\\\\\\\\" will fail.\n- Validate that zero token operations to a PIT view will fail.","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T15:46:36-1M","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"36","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"},{"RequirementType":"PR","StrategyID":"36","Priority":"          ","ScopeSize":"0.2","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Initial","AdjustedSize":null,"ReqxID":"LSIP200421574","ReqxScopePhase":"HighLevel","ReqxTitle":"Support ODX xCopy Lite between 512e\/n and 4Kn","Boxcar":"LSIP200290447"}],"references":[{"AssocReq":"ER","StrategyID":"36","ReqType":"ER","dbID":"4812","ID":"2013-04-23T13:33:00Z-32171-IDAPDPJF","Title":"Zero Token Operations","DocNumber":"263-00942","DocTitle":"Support for Windows ODX","DocRevision":"A.6"}],"categories":[{"CategoryID":"6","CategoryName":"Operational behavior","CategoryPath":"Root\\Default\\Qualification Areas","CategoryFatherID":"5","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"1","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":null,"Software":null,"Hardware":null,"ALM":"1","QualificationArea":"1","pivot":{"StrategyID":"36","CategoryID":"6"}},{"CategoryID":"26","CategoryName":"Offload Data Transfer - ODX","CategoryPath":"Root\\Feature\\CFW\\Compliant","CategoryFatherID":"25","IsPRCategory":null,"IsStrategyCategory":null,"IsActive":"0","Description":null,"CreatedBy":null,"CreatedDate":null,"ModifiedBy":null,"ModifiedDate":null,"ApprovedBy":null,"ApprovedDate":null,"Component":null,"Feature":"1","Software":null,"Hardware":null,"ALM":"1","QualificationArea":null,"pivot":{"StrategyID":"36","CategoryID":"26"}}]},{"StrategyID":"37","TopicID":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T15:48:31-3F","TopicRev":"0","TopicRevComments":null,"State":"Approved","CreatedBy":null,"CreatedDate":"2013-06-12 15:48:32.550","ModifiedBy":"dstein","ModifiedDate":"2013-08-07 10:33:42.967","StrategyHeadline":"XCOPY Lite and Exclusive Operations","TestStrategy":"1. Exclusive Ops:DSS - Dynamic Segment Sizing operations on source or destination volumes undergoing PT and\/or WUT operations may invalidate TOKENS, thus resulting in a failed WUT operation.\na. DSS will not be prevented from running on volumes where TOKENS are active.\nb. WUT and PT operations will not be prevented from running on volumes undergoing DSS.\nc. A failed WUT operation may occur in the unlikely event of a DSS operation occurs on a LBA set\nbetween a PT and WUT operation on that LBA set.\nd. A WUT retry will not succeed since the TOKEN is invalid.\ne. DSS operations on destination volumes will not invalidate TOKENS.\n- Validate that a running a number of copy\/exclusive ops combinations (DSS, DVE, DVM, DCE, Defragmentation) for a 18 hour period on different source volumes will result in one of two conditions: (1) Token failure due to hitting the same LBA for both the source XCOPY Lite operation and the exclusive operation; (2) No token failure reported.  In the case of (1), copy operation should revert back to the host copy and data integrity can be verified.  In the case of (2), data integrity can be verified.\n2. Exclusive Ops:DVE - Dynamic Volume Expansion operations on source volumes undergoing PT and\/or WUT operations may invalidate TOKENS, thus resulting in a failed WUT.\na. DVE will not be prevented from running on volumes where TOKENS are active.\nb. WUT and PT operations will not be prevented from running on volumes undergoing DVE.\nc. A failed WUT operation may occur in the unlikely event of a DVE operation occurs on a LBA set between a PT and WUT operation.\nd. A WUT retry will not succeed since the TOKEN is invalid.\ne. DVE operations on destination volumes will not invalidate TOKENS.\n- See #1 for the test scenario that can cover DVE\n3. Exclusive Ops:DVM - Dynamic Volume Migration operations on source or destination volumes undergoing PT and\/or WUT operations may invalidate TOKENS.\na. This includes migration between all supported RAID levels.\nb. DVM will not be prevented from running on volumes where TOKENS are active.\nc. Note that WUT and PT operations will not be prevented from running on volumes undergoing DVM.\nd. A failed WUT operation may occur in the unlikely event of a DVM operation occurs on a LBA set between a PT and WUT operation.\ne. A WUT retry will not succeed since the TOKEN is invalid.\nf. DVM operations on destination volumes will not invalidate TOKENS.\n- See #1 for the test scenario that can cover DVM\n4. Exclusive Ops:DCE - Dynamic Capacity Expansion operations on source or destination volumes\nundergoing PT and\/or WUT operations may invalidate TOKENS.\na. DCE will not be prevented from running on volumes where TOKENS are active.\nb. WUT and PT operations will not be prevented from running on volumes undergoing DCE.\nc. A failed WUT operation may occur in the unlikely event of a DCE operation occurs on a LBA set\nbetween a PT and WUT operation.\nd. A WUT retry will not succeed since the TOKEN is invalid\ne. DCE operations on destination volumes will not invalidate TOKENS.\n- See #1 for the test scenario that can cover DCE\n5. Exclusive Ops:Deframentation - Defragmentation operations on source or destination volumes undergoing PT and\/or WUT operations will not invalidate TOKENS.\na. Defrag operations that utilize writes will not be counted in the write tracking algorithm.\n- See #1 for the test scenario that can cover Defragmentation\n6. Exclusive Ops:IAF -Initial Address Format operations on source or destination undergoing PT and\/or WUT operations will not invalidate TOKENS.\na. This includes IAF operations on Data Assurance enabled volumes.\nb. IAF operations that utilize writes will not be counted in the write tracking algorithm.\n- Validate that IAF operations to a source or destination volume involved in XCOPY Lite operations does not invalidate a token\n7. Exclusive Ops: CopyBack - Copy back operation to a repaired drive on source or destination volumes will not invalidate tokens.\na. Copy back operations that utilize writes will not be counted in the write tracking algorithm.\n- Validate that a copy back operation to a drive (using all allowable RAID levels and disk pools)  involved in XCOPY Lite operations does not invalidate token operations.","Owner":"dstein","Approach":"Functional","Goal":"","IsActive":"1","VariationPoint":"Original","VariationOf":"T-XXXX-XXXX-XXXX-XXXX-2013-05-12T15:48:31-3F","RevisionOf":null,"Type":"G","QualArea":"Operational behavior","ImpactArea":"Offload Data Transfer - ODX","suggestedTestCases":[],"requirements":[{"RequirementType":"PR","StrategyID":"37","Priority":"          ","ScopeSize":"0","RiskMultiplier":"1","Complexity":"","Leverage":"","RITSize":"","ScopePhase":"Detailed","AdjustedSize":null,"ReqxID":"LSIP200246486","ReqxScopePhase":"Detailed","ReqxTitle":"Support for Windows 8 Offloaded Data Transfer (ODX)","Boxcar":"LSIP200318328"}]}]